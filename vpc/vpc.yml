---
  AWSTemplateFormatVersion: "2010-09-09"

  Description: "Creates a VPC with Managed NAT"
  Parameters:
    VPCName:
      Type: String
      Description: VPC Name

    VPCCIDR: 
      Description: The CIDR Block of VPC to be created. 
      Type: String
    VPCPublic1CIDR:
      Description: The CIDR Block of Public Subnet 1. 
      Type: String
    VPCPublic2CIDR:
      Description: The CIDR Block of Public Subnet 2. 
      Type: String
    VPCApp1CIDR:
      Description: The CIDR Block of Application Subnet 1. 
      Type: String
    VPCApp2CIDR:
      Description: The CIDR Block of Application Subnet 2. 
      Type: String
    VPCApp3CIDR:
      Description: The CIDR Block of Application Subnet 3. 
      Type: String
    VPCDS1CIDR:
      Description: The CIDR Block of Data Store Subnet 1. 
      Type: String
    VPCDS2CIDR:
      Description: The CIDR Block of Data Store Subnet 2. 
      Type: String

    Environment:
      Description: The Environment
      Type: String
    Application:
      Description: The application name
      Type: String
    Customer:
      Description: The customer name
      Type: String
         
  Mappings:

    # This mapping accounts for the scenario when certain AZs
    # are not available to use (this differs on a per account
    # per customer basis). E.g., if the 'b' AZ is not available
    # in a specific region in one's account then updating the
    # list contained in the mapping below here will allow a
    # different AZ to be chosen.
    AZRegions:
      eu-south-1:
        AZs: ["a", "b", "c"]
      eu-west-1:
        AZs: ["a", "b", "c"]
      eu-west-2:
        AZs: ["a", "b", "c"]
      us-east-1:
        AZs: ["a", "b", "c"]
      us-east-2:
        AZs: ["a", "b", "c"]
      us-west-1:
        AZs: ["a", "b", "c"]
      us-west-2:
        AZs: ["a", "b", "c"]

  Resources:
    
    VPC:
      Type: "AWS::EC2::VPC"
      Properties:
        EnableDnsSupport: "true"
        EnableDnsHostnames: "true"
        CidrBlock: !Ref VPCCIDR
        Tags:
          -
            Key: "Environment"
            Value: !Ref Environment
          -
            Key: "Customer"
            Value: !Ref Customer
          -
            Key: Application
            Value: !Ref Application
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-vpc'

    PublicSubnet1:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone:
          Fn::Sub:
            - "${AWS::Region}${AZ}"
            - AZ: !Select [ 0, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
        CidrBlock: !Ref VPCPublic1CIDR
        MapPublicIpOnLaunch: false
        Tags:
          -
            Key: "Network"
            Value: "Public"
          -
            Key: Application
            Value: !Ref Application
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-pub-1'
          -
            Key: "Environment"
            Value: !Ref Environment
          -
            Key: "Customer"
            Value: !Ref Customer

    PublicSubnet2:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone:
          Fn::Sub:
            - "${AWS::Region}${AZ}"
            - AZ: !Select [ 1, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
        CidrBlock: !Ref VPCPublic2CIDR
        MapPublicIpOnLaunch: false
        Tags:
          -
            Key: Application
            Value: !Ref Application
          -
            Key: "Network"
            Value: "Public"
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-pub-2'
          -
            Key: "Environment"
            Value: !Ref Environment
          -
            Key: "Customer"
            Value: !Ref Customer

    AppPrv1:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone:
          Fn::Sub:
            - "${AWS::Region}${AZ}"
            - AZ: !Select [ 0, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
        CidrBlock: !Ref VPCApp1CIDR
        Tags:
          -
            Key: Application
            Value: !Ref Application
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-app-1'
          -
            Key: "Environment"
            Value: !Ref Environment
          -
            Key: "Customer"
            Value: !Ref Customer

    AppPrv2:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone:
          Fn::Sub:
            - "${AWS::Region}${AZ}"
            - AZ: !Select [ 1, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
        CidrBlock: !Ref VPCApp2CIDR
        Tags:
          -
            Key: Application
            Value: !Ref Application
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-app-2'
          -
            Key: "Environment"
            Value: !Ref Environment
          -
            Key: "Customer"
            Value: !Ref Customer

    AppPrv3:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone:
          Fn::Sub:
            - "${AWS::Region}${AZ}"
            - AZ: !Select [ 2, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
        CidrBlock: !Ref VPCApp3CIDR
        Tags:
          -
            Key: Application
            Value: !Ref Application
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-app-3'
          -
            Key: "Environment"
            Value: !Ref Environment
          -
            Key: "Customer"
            Value: !Ref Customer

    DSPrv1:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone:
          Fn::Sub:
            - "${AWS::Region}${AZ}"
            - AZ: !Select [ 0, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
        CidrBlock: !Ref VPCDS1CIDR
        Tags:
          -
            Key: Application
            Value: !Ref Application
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-ds-1'
          -
            Key: "Environment"
            Value: !Ref Environment
          -
            Key: "Customer"
            Value: !Ref Customer

    DSPrv2:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone:
          Fn::Sub:
            - "${AWS::Region}${AZ}"
            - AZ: !Select [ 1, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
        CidrBlock: !Ref VPCDS2CIDR
        Tags:
          -
            Key: Application
            Value: !Ref Application
          -
            Key: "Customer"
            Value: !Ref Customer
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-ds-2'                
          -
            Key: "Environment"
            Value: !Ref Environment

    InternetGateway:
      Type: "AWS::EC2::InternetGateway"
      Properties:
        Tags:
          -
            Key: Application
            Value: !Ref Application
          -
            Key: "Network"
            Value: "Public"
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-igw'
          -
            Key: "Environment"
            Value: !Ref Environment
          -
            Key: "Customer"
            Value: !Ref Customer

    GatewayToInternet:
      Type: "AWS::EC2::VPCGatewayAttachment"
      Properties:
        VpcId:
          Ref: "VPC"
        InternetGatewayId:
          Ref: "InternetGateway"

    PublicRouteTable:
      Type: "AWS::EC2::RouteTable"
      Properties:
        VpcId:
          Ref: "VPC"
        Tags:
          -
            Key: Application
            Value: !Ref Application
          -
            Key: "Network"
            Value: "Public"
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-pub-rt'
          -
            Key: "Environment"
            Value: !Ref Environment
          -
            Key: "Customer"
            Value: !Ref Customer

    PublicRoute:
      Type: "AWS::EC2::Route"
      DependsOn: "GatewayToInternet"
      Properties:
        RouteTableId:
          Ref: "PublicRouteTable"
        DestinationCidrBlock: "0.0.0.0/0"
        GatewayId:
          Ref: "InternetGateway"

    PublicSubnetRouteTableAssociation1:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PublicSubnet1"
        RouteTableId:
          Ref: "PublicRouteTable"

    PublicSubnetRouteTableAssociation2:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PublicSubnet2"
        RouteTableId:
          Ref: "PublicRouteTable"

    PublicNetworkAcl:
      Type: "AWS::EC2::NetworkAcl"
      Properties:
        VpcId:
          Ref: "VPC"
        Tags:
          -
            Key: Application
            Value: !Ref Application
          -
            Key: "Network"
            Value: "Public"
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-pub-nacl'
          -
            Key: "Environment"
            Value: !Ref Environment
          -
            Key: "Customer"
            Value: !Ref Customer

    InboundHTTPPublicNetworkAclEntry:
      Type: "AWS::EC2::NetworkAclEntry"
      Properties:
        NetworkAclId:
          Ref: "PublicNetworkAcl"
        RuleNumber: "100"
        Protocol: "-1"
        RuleAction: "allow"
        Egress: "false"
        CidrBlock: "0.0.0.0/0"
        PortRange:
          From: "0"
          To: "65535"

    OutboundPublicNetworkAclEntry:
      Type: "AWS::EC2::NetworkAclEntry"
      Properties:
        NetworkAclId:
          Ref: "PublicNetworkAcl"
        RuleNumber: "100"
        Protocol: "-1"
        RuleAction: "allow"
        Egress: "true"
        CidrBlock: "0.0.0.0/0"
        PortRange:
          From: "0"
          To: "65535"

    PublicSubnetNetworkAclAssociation1:
      Type: "AWS::EC2::SubnetNetworkAclAssociation"
      Properties:
        SubnetId:
          Ref: "PublicSubnet1"
        NetworkAclId:
          Ref: "PublicNetworkAcl"

    PublicSubnetNetworkAclAssociation2:
      Type: "AWS::EC2::SubnetNetworkAclAssociation"
      Properties:
        SubnetId:
          Ref: "PublicSubnet2"
        NetworkAclId:
          Ref: "PublicNetworkAcl"

    ElasticIP1:
      Type: "AWS::EC2::EIP"
      Properties:
        Domain: "vpc"

    ElasticIP2:
      Type: "AWS::EC2::EIP"
      Properties:
        Domain: "vpc"

    NATGateway1:
      Type: "AWS::EC2::NatGateway"
      Properties:
        AllocationId:
          Fn::GetAtt:
            - "ElasticIP1"
            - "AllocationId"
        SubnetId:
          Ref: "PublicSubnet1"
        Tags:
          -
            Key: "Name"
            Value: !Join
              - '-'
              - - !Ref "VPCName"
                - 'natgateway1'
          -
            Key: "Environment"
            Value: !Ref Environment
          -
            Key: "Customer"
            Value: !Ref Customer
          -
            Key: Application
            Value: !Ref Application

    NATGateway2:
      Type: "AWS::EC2::NatGateway"
      Properties:
        AllocationId:
          Fn::GetAtt:
            - "ElasticIP2"
            - "AllocationId"
        SubnetId:
          Ref: "PublicSubnet2"
        Tags:
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-natgateway2'
          -
            Key: "Environment"
            Value: !Ref Environment
          -
            Key: "Customer"
            Value: !Ref Customer
          -
            Key: Application
            Value: !Ref Application

    ApplicationRouteTable1:
      Type: "AWS::EC2::RouteTable"
      Properties:
        VpcId:
          Ref: "VPC"
        Tags:
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-app-rt-1'
          -
            Key: "Environment"
            Value: !Ref Environment
          -
            Key: "Customer"
            Value: !Ref Customer
          -
            Key: Application
            Value: !Ref Application

    ApplicationRouteTable2:
      Type: "AWS::EC2::RouteTable"
      Properties:
        VpcId:
          Ref: "VPC"
        Tags:
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-app-rt-2-3'
          -
            Key: "Environment"
            Value: !Ref Environment
          -
            Key: "Customer"
            Value: !Ref Customer
          -
            Key: Application
            Value: !Ref Application

    DSRouteTable1:
      Type: "AWS::EC2::RouteTable"
      Properties:
        VpcId:
          Ref: "VPC"
        Tags:
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-ds-rt-1'
          -
            Key: "Environment"
            Value: !Ref Environment
          -
            Key: "Customer"
            Value: !Ref Customer
          -
            Key: Application
            Value: !Ref Application

    DSRouteTable2:
      Type: "AWS::EC2::RouteTable"
      Properties:
        VpcId:
          Ref: "VPC"
        Tags:
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-ds-rt-2'
          -
            Key: "Environment"
            Value: !Ref Environment
          -
            Key: "Customer"
            Value: !Ref Customer
          -
            Key: Application
            Value: !Ref Application

    PrivateRouteToInternet1:
      Type: "AWS::EC2::Route"
      Properties:
        RouteTableId:
          Ref: "ApplicationRouteTable1"
        DestinationCidrBlock: "0.0.0.0/0"
        NatGatewayId:
          Ref: "NATGateway1"    

    # Adding values to Private Route Table 2    
    PrivateRouteToInternet2:
      Type: "AWS::EC2::Route"
      Properties:
        RouteTableId:
          Ref: "ApplicationRouteTable2"
        DestinationCidrBlock: "0.0.0.0/0"
        NatGatewayId:
          Ref: "NATGateway2"      

    # Adding values to DS Route Table 1                 
    DSRouteToInternet1:
      Type: "AWS::EC2::Route"
      Properties:
        RouteTableId:
          Ref: "DSRouteTable1"
        DestinationCidrBlock: "0.0.0.0/0"
        NatGatewayId:
          Ref: "NATGateway1"

    # Adding values to DS Route Table 2                      
    DSRouteToInternet2:
      Type: "AWS::EC2::Route"
      Properties:
        RouteTableId:
          Ref: "DSRouteTable2"
        DestinationCidrBlock: "0.0.0.0/0"
        NatGatewayId:
          Ref: "NATGateway2"     

    #Private Subnet Route Table Association
    PrivateSubnetRouteTableAssociation1:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "AppPrv1"
        RouteTableId:
          Ref: "ApplicationRouteTable1"

    PrivateSubnetRouteTableAssociation2:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "AppPrv2"
        RouteTableId:
          Ref: "ApplicationRouteTable2"

    PrivateSubnetRouteTableAssociation3:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "AppPrv3"
        RouteTableId:
          Ref: "ApplicationRouteTable2"

    #DS Route Table Association
    DSSubnetRouteTableAssociation1:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "DSPrv1"
        RouteTableId:
          Ref: "DSRouteTable1"
    DSSubnetRouteTableAssociation2:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "DSPrv2"
        RouteTableId:
          Ref: "DSRouteTable2"

  Outputs:

    VPCId:
      Description: "VPCId of VPC"
      Value: !Ref VPC
      Export:
        Name: !Sub "${AWS::StackName}-${AWS::Region}-VpcId"

    PublicSubnet1:
      Description: "SubnetId of public subnet 1"
      Value: !Ref PublicSubnet1
      Export:
        Name: !Sub "${AWS::StackName}-${AWS::Region}-PubSubnet1"
        
    PublicSubnet2:
      Description: "SubnetId of public subnet 2"
      Value: !Ref PublicSubnet2
      Export:
        Name: !Sub "${AWS::StackName}-${AWS::Region}-PubSubnet2"
    AppPrv1:
      Description: "SubnetId of private subnet 1"
      Value: !Ref AppPrv1
      Export:
        Name: !Sub "${AWS::StackName}-${AWS::Region}-AppSubnet1"
    AppPrv2:
      Description: "SubnetId of private subnet 2"
      Value: !Ref AppPrv2
      Export:
        Name: !Sub "${AWS::StackName}-${AWS::Region}-AppSubnet2"
    AppPrv3:
      Description: "SubnetId of private subnet 3"
      Value: !Ref AppPrv3
      Export:
        Name: !Sub "${AWS::StackName}-${AWS::Region}-AppSubnet3"
        
    DSPrv1:
      Description: "SubnetId of private subnet 1"
      Value: !Ref DSPrv1
      Export:
        Name: !Sub "${AWS::StackName}-${AWS::Region}-DbSubnet1"

    DSPrv2:
      Description: "SubnetId of private subnet 2"
      Value: !Ref DSPrv2
      Export:
        Name: !Sub "${AWS::StackName}-${AWS::Region}-DbSubnet2"
            
    DefaultSecurityGroup:
      Description: "DefaultSecurityGroup Id"
      Value: !GetAtt VPC.DefaultSecurityGroup
      Export:
        Name: !Sub "${AWS::StackName}-${AWS::Region}-DefaultSG"

    ApplicationRouteTable1:
      Description: Application Route Table 1
      Value: !Ref ApplicationRouteTable1
      Export:
        Name: !Sub "${AWS::StackName}-${AWS::Region}-ApplicationRouteTable1"

    ApplicationRouteTable2:
      Description: Application Route Table 2
      Value: !Ref ApplicationRouteTable2
      Export:
        Name: !Sub "${AWS::StackName}-${AWS::Region}-ApplicationRouteTable2"

    PrivateRouteToInternet1:
      Description: Private Route To Internet 1
      Value: !Ref PrivateRouteToInternet1
      Export:
        Name: !Sub "${AWS::StackName}-${AWS::Region}-PrivateRouteToInternet1"

    PrivateRouteToInternet2:
      Description: Private Route To Internet 2
      Value: !Ref PrivateRouteToInternet2
      Export:
        Name: !Sub "${AWS::StackName}-${AWS::Region}-PrivateRouteToInternet2"